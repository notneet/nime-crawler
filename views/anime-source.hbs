<div class="container py-6 min-h-screen">
  <div class="sm:flex sm:items-center">
    <div class="sm:flex-auto">
      <h1 class="text-2xl font-semibold text-gray-900">Anime Sources</h1>
    </div>
    <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
  <button type="button" 
          onclick="openModal('addSourceModal')"
          class="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto">
    Add Source
  </button>
    </div>
  </div>
  <div class="mt-8 flex flex-col">
    <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
      <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
        <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
          <table class="min-w-full divide-y divide-gray-300">
            <thead class="bg-gray-50">
              <tr>
                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6">Media ID</th>
                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">URL</th>
                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Last Run</th>
                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Interval (min)</th>
                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Status</th>
                <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                  <span class="sr-only">Actions</span>
                </th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 bg-white">
              {{#each sources}}
              <tr>
                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">{{media_id}}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                  <a href="{{this.url}}" target="_blank" class="text-indigo-600 hover:text-indigo-900">
                    {{truncateUrl this.url}}
                  </a>
                </td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{{formatDate last_run_at}}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">{{interval_minute}}</td>
                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                  <span class="inline-flex rounded-full {{#if n_status}}bg-green-100 text-green-800{{else}}bg-red-100 text-red-800{{/if}} px-2 text-xs font-semibold leading-5">
                    {{#if n_status}}Active{{else}}Inactive{{/if}}
                  </span>
                </td>
                <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                  <button type="button" onclick="editSource('{{id}}')" class="text-indigo-600 hover:text-indigo-900 mr-4">Edit</button>
                  <button type="button" onclick="deleteSource('{{id}}')" class="text-red-600 hover:text-red-900">Delete</button>
                </td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Source Modal -->
<div id="addSourceModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 hidden">
  <div class="flex min-h-full items-center justify-center p-4">
    <div class="bg-white rounded-lg px-4 pt-5 pb-4 sm:p-6 sm:pb-4 w-full max-w-lg">
      <div class="mb-4">
        <h3 class="text-lg font-medium leading-6 text-gray-900">Add New Source</h3>
      </div>
      <form id="addSourceForm" action="/api/anime-sources" method="POST">
        <div class="space-y-4">
          <div>
            <label for="media_id" class="block text-sm font-medium text-gray-700">Media ID</label>
            <input type="number" name="media_id" id="media_id" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                   placeholder="Enter media ID">
          </div>
          
          <div>
            <label for="url" class="block text-sm font-medium text-gray-700">URL</label>
            <input type="url" name="url" id="url" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                   placeholder="Enter URL">
          </div>
          
          <div>
            <label for="interval_minute" class="block text-sm font-medium text-gray-700">Interval (minutes)</label>
            <input type="number" name="interval_minute" id="interval_minute" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                   placeholder="Enter interval in minutes">
          </div>
          
          <div>
            <label for="n_status" class="block text-sm font-medium text-gray-700">Status</label>
            <select name="n_status" id="n_status" required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
              <option value="1">Active</option>
              <option value="0">Inactive</option>
            </select>
          </div>
        </div>
        
        <div class="mt-5 sm:mt-6 flex space-x-3">
          <button type="submit"
                  class="inline-flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm">
            Add Source
          </button>
          <button type="button" onclick="closeModal('addSourceModal')"
                  class="inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm">
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Edit Source Modal -->
<div id="editSourceModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 hidden">
  <div class="flex min-h-full items-center justify-center p-4">
    <div class="bg-white rounded-lg px-4 pt-5 pb-4 sm:p-6 sm:pb-4 w-full max-w-lg">
      <div class="mb-4">
        <h3 class="text-lg font-medium leading-6 text-gray-900">Edit Source</h3>
      </div>
      <form id="editSourceForm" action="/api/anime-sources" method="PUT">
        <input type="hidden" id="edit_id" name="id">
        <div class="space-y-4">
          <div>
            <label for="edit_media_id" class="block text-sm font-medium text-gray-700">Media ID</label>
            <input type="number" name="media_id" id="edit_media_id" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          </div>
          
          <div>
            <label for="edit_url" class="block text-sm font-medium text-gray-700">URL</label>
            <input type="url" name="url" id="edit_url" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          </div>
          
          <div>
            <label for="edit_interval_minute" class="block text-sm font-medium text-gray-700">Interval (minutes)</label>
            <input type="number" name="interval_minute" id="edit_interval_minute" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
          </div>
          
          <div>
            <label for="edit_n_status" class="block text-sm font-medium text-gray-700">Status</label>
            <select name="n_status" id="edit_n_status" required
                    class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
              <option value="1">Active</option>
              <option value="0">Inactive</option>
            </select>
          </div>
        </div>
        
        <div class="mt-5 sm:mt-6 flex space-x-3">
          <button type="submit"
                  class="inline-flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm">
            Update Source
          </button>
          <button type="button" onclick="closeModal('editSourceModal')"
                  class="inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm">
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
// Modal handling functions
function openModal(modalId) {
  document.getElementById(modalId).classList.remove('hidden');
}

function closeModal(modalId) {
  document.getElementById(modalId).classList.add('hidden');
  if (modalId === 'addSourceModal') {
    document.getElementById('addSourceForm').reset();
  } else if (modalId === 'editSourceModal') {
    document.getElementById('editSourceForm').reset();
  }
}

// Edit source function
function editSource(id) {
  // Convert sources from the server to a JavaScript object
  const sourceData = JSON.parse('{{{json sources}}}');
  const source = sourceData.find(s => s.id === id);
  
  if (source) {
    // Fill the edit form with the source data
    document.getElementById('edit_id').value = source.id;
    document.getElementById('edit_media_id').value = source.media_id;
    document.getElementById('edit_url').value = source.url;
    document.getElementById('edit_interval_minute').value = source.interval_minute;
    document.getElementById('edit_n_status').value = source.n_status;
    
    // Open the modal
    openModal('editSourceModal');
  } else {
    console.error('Source not found:', id);
  }
}

// Form submission handlers
document.getElementById('addSourceForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  const data = Object.fromEntries(formData);
  
  try {
    const response = await fetch('/api/anime-sources', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        media_id: data.media_id.toString(), // Send as string instead of BigInt
        url: data.url,
        interval_minute: parseInt(data.interval_minute),
        n_status: parseInt(data.n_status),
        last_run_at: new Date()
      }),
    });

    if (response.ok) {
      closeModal('addSourceModal');
      window.location.reload();
    } else {
      const error = await response.text();
      alert(`Error adding source: ${error}`);
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Error adding source');
  }
});

document.getElementById('editSourceForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  const data = Object.fromEntries(formData);
  
  try {
    const response = await fetch(`/api/anime-sources/${data.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        media_id: data.media_id.toString(), // Send as string instead of BigInt
        url: data.url,
        interval_minute: parseInt(data.interval_minute),
        n_status: parseInt(data.n_status)
      }),
    });

    if (response.ok) {
      closeModal('editSourceModal');
      window.location.reload();
    } else {
      const error = await response.text();
      alert(`Error updating source: ${error}`);
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Error updating source');
  }
});

// Delete handler
async function deleteSource(id) {
  if (confirm('Are you sure you want to delete this source?')) {
    try {
      const response = await fetch(`/api/anime-sources/${id}`, {
        method: 'DELETE',
      });
      
      if (response.ok) {
        window.location.reload();
      } else {
        const error = await response.text();
        alert(`Error deleting source: ${error}`);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error deleting source');
    }
  }
}

// Add keyboard event listeners to close modals with Escape key
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape') {
    closeModal('addSourceModal');
    closeModal('editSourceModal');
  }
});
</script>

